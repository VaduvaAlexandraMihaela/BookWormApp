@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager

@inject UserManager<IdentityUser> UserManager

@model HomePageViewModel

@{
    ViewData["Title"] = "Home Page";
}

@if (!SignInManager.IsSignedIn(User))
{
    <div class="site-section py-0">
        <div class="owl-carousel hero-slide owl-style">

            <div class="site-section">
                <div class="container">
                    <div class="half-post-entry d-block d-lg-flex bg-dark">
                        <div class="contents">
                            <span class="caption"></span>
                            <p class="mb-3"></p>

                            <div class="post-meta">
                                <span class="d-block">Welcome to bookworm<a asp-area="Identity" asp-page="/Account/Register"> Register</a> or<a asp-area="Identity" asp-page="/Account/Login"> Login</a></span>
                            </div>

                        </div>
                    </div>
                </div>
            </div>

            <div class="site-section">
                <div class="container">
                    <div class="half-post-entry d-block d-lg-flex bg-red">
                        <div class="contents">
                            <span class="caption"></span>
                            <h2><a href="#"></a></h2>
                            <p class="mb-3"></p>

                            <div class="post-meta">
                                <span class="d-block">Welcome to bookworm<a asp-area="Identity" asp-page="/Account/Register"> Register</a> or<a asp-area="Identity" asp-page="/Account/Login"> Login</a></span>
                            </div>

                        </div>
                    </div>
                </div>
            </div>


        </div>
    </div>
}

@if (SignInManager.IsSignedIn(User))
{
<div class="site-section">
    <div class="container">
        <div class="row">
           
            <div class="col-lg-6">
                <div class="section-title">
                    <h2>Your friends' books</h2>
                </div>
                @foreach (var item in Model.books)
                {
                    <div class="post-entry-2 d-flex">

                        <div class="contents">
                            <h2><a>@Html.DisplayFor(model => item.Name)</a></h2>

                            <div class="post-meta">
                                <span class="d-block"><a>@Html.DisplayFor(model => item.User.FirstName)</a></span>
                            </div>
                        </div>
                    </div>
                }
                </div>
            
            <div class="col-lg-6">
                <div class="section-title">
                    <h2>Your friends' authors</h2>
                </div>
                @foreach (var item1 in Model.authors)
                {
                <div class="post-entry-2 d-flex">
                    <div class="contents">
                        <h2><a>@Html.DisplayFor(model => item1.Name)</a></h2>
                       
                        <div class="post-meta">
                            <span class="d-block"><a>@Html.DisplayFor(model => item1.User.FirstName)</a> </span>
                        </div>
                    </div>
                </div>

                }
            </div>
        </div>
    </div>
</div>

}